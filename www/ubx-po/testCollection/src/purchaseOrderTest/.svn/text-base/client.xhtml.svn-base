<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ev="http://www.w3.org/2001/xml-events" 
      xmlns:xforms="http://www.w3.org/2002/xforms" 
      xmlns:xsd="http://www.w3.org/2001/XMLSchema"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-Instance"
          xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:javascript="http://www.w3.org/2002/xforms#inline">
 <head>
    <meta content="text/html; charset=ISO-8859-1" http-equiv="content-type" />
    <meta name="AUTHOR" content="Erik A. Johnson" />
    <title>Purchase Order Application XForm</title>    
    <script src="../../src/ubiquity-loader.js" type="text/javascript">/**/</script>

    <script src="../format.js" type="text/javascript">/**/</script>
	<link href="./style/mainStyle.css" rel="stylesheet"></link>
	<link href="./style/gen_default.css" rel="stylesheet"></link>
  </head>
  <body class="yui-skin-sam">
       <xforms:model id="model">  
           <!-- Main inventory listing retreived from the eXist database  -->
           <xforms:instance id='inventoryList' src="http://localhost:8080/exist/rest/db/testCollection/testInventorylist.xml">
           </xforms:instance>
           <!-- user is never exposed to the actual purchase order table, they mereley get a prototype and send away there request
           	the Xquery on the server handles this request by taking the submitted request and updating the inventory.
           	On the admin side, they get a snapshot of the purchases that are entered into the purchases file and these purchases submitted
           	by the purchaseOrder instance affect the inventory status.-->
          
         <xforms:instance id='clientPurchaseOrder' src="http://localhost:8080/exist/rest/db/testCollection/purchaseOrderTest.xml">
         </xforms:instance>
         
         <!-- The total is just the sum of the subtotal and the tax; any time
                  those change, the total is automatically updated -->
           <xforms:bind nodeset="instance('clientPurchaseOrder')/total" calculate="../subtotal + ../tax"></xforms:bind>
           	                 
           <!-- The tax is just the subtotal times the tax rate -->
           <xforms:bind nodeset="instance('clientPurchaseOrder')/tax" calculate="../subtotal * 0.07"></xforms:bind>
           
           <!-- The node set feature of XPath is used to get all the line total 
                  elements and set a calculation for each one.  A line total is
                  just the unit cost times the quantity.  Any time a new row is 
                  inserted, this declaration automatically creates a new line total
                  calculation for it.  An update of unit cost or quantity on any row 
                  automatically updates the line total of that row, which then causes
                  the subtotal, tax and total to be updated automatically.  Even though
                  those calculations are declared before this one, XForms reorders the 
                  calculations so that they run in the order that makes sense. -->
           <xforms:bind nodeset="instance('clientPurchaseOrder')/productsList/product/lineTotal" calculate="../cost * ../quantity"></xforms:bind>
             
           
           <!-- The subtotal is the sum of all the line totals.  Any time a row is
                  inserted, deleted or changed, the subtotal is automatically updated.
                  The calculate uses the 'node set' feature of XPath to get however
                  many line total elements exist for the summation. -->
           <xforms:bind nodeset="instance('clientPurchaseOrder')/subtotal" calculate="sum(../productsList/product/lineTotal)"></xforms:bind>
           

           <!-- Once a purchase item is created, the user must specify a quantity. -->
          <xforms:bind nodeset="instance('clientPurchaseOrder')/productsList/product/quantity" type="xsd:positiveInteger"></xforms:bind>
          	
           
           <!-- Once a purchase item is created, the user must choose a product name. -->
           <xforms:bind nodeset="instance('clientPurchaseOrder')/productsList/product" required="true()"></xforms:bind>
         
          <xforms:bind nodeset="instance('clientPurchaseOrder')/customerInfo/customer/creditCardNumber" type="xforms:card-number"/>
          

         
         
         <!-- The following expression will update the database by updating the inventory the ID and adding the order to the orders list-->
         <xforms:submission id="updatePurchaseOrder" 
                              method="post" 
                              includenamespaceprefixes=""
                              action="http://localhost:8080/exist/rest/db/testCollection/insertOrders.xql"> 
                <xforms:message ev:event="xforms-submit-error" level="modal" if="event('error-type')!='validation-error'">Unable to submit. Please try again later.</xforms:message>
                <xforms:message ev:event="xforms-submit-error" level="modal" if="event('error-type')='validation-error'">Some of the data on this form is invalid. Please correct errors and try again.</xforms:message>
           </xforms:submission>
        </xforms:model>
           
           
          
          
       

<div id="mainContainer">

	<div id="headerContainer">
	</div> <!-- header div-->
	
	
	<div id="mainContentArea">
	
	 <div id="leftNavigation">
	 
	 
	 <ul>
	 <li>
	 <xforms:trigger appearance="xf:image">
    	<img class="buttonImage" src="../pngIcons/Shopping Cart.png" />
        <xforms:label>Purchases</xforms:label>
            </xforms:trigger>
      </li>
      <li>

    <xforms:trigger appearance="xf:image">
    	<img class="buttonImage" src="../pngIcons/Door.png" />
        <xforms:label>Inventory</xforms:label>
            </xforms:trigger>
      </li>
      <li>

    <xforms:trigger appearance="xf:image">
    	<img class="buttonImage" src="../pngIcons/User.png" />
        <xforms:label>Logout</xforms:label>
        <xforms:load ev:event="DOMActivate" resource="purchaseOrderMain.html"/>
    </xforms:trigger>
    </li>
    </ul>
		
	</div>
	<div id="mainForm">
		<h3>Purchases</h3>
		 <hr class="rule"/>

	<xforms:repeat  nodeset="instance('clientPurchaseOrder')/productsList/product" id="purchaseTable" startindex="1">
		<xforms:trigger appearance="xf:image">
			    <img class="buttonImage" src="../pngIcons/Delete3.png" />
			    <xforms:action ev:event="DOMActivate">
			
			       <!-- Delete the currently indexed item -->
			       <xforms:delete nodeset="../product" at="index('purchaseTable')"></xforms:delete>
			
			       <!-- Insert a blank item if the last one was just deleted -->
			       <xforms:insert context="../product" origin="../prototype/product" 
					      if="count(../product)=0"></xforms:insert>
			       
			       <!-- Put the focus to the indexed item of the order table -->
			       <xforms:setfocus control="purchaseTable"></xforms:setfocus>
			       
			    </xforms:action>
		    </xforms:trigger>
				<xforms:select1  ref="@productID" appearance="minimal">
				    <xforms:label>Product:</xforms:label>
				    <xforms:itemset nodeset="instance('inventoryList')/product">
					<xforms:label>
								<xforms:output ref="productName"></xforms:output>
								<xforms:output ref="image" mediatype="image/*"></xforms:output>
					</xforms:label>
					<xforms:value ref="@productID"></xforms:value>
				    </xforms:itemset>
				    <xforms:action ev:event="xforms-value-changed">
					<!-- in here we need to set the value of the purchase currently selected in the model
					this change will then be reflected on the UI. -->
					<xforms:setvalue ref="../productName"
									value="instance('inventoryList')/product[@productID = current()/../@productID]/productName">	         
					 </xforms:setvalue>
					
					
					<xforms:setvalue ref="../cost"
									value="instance('inventoryList')/product[@productID = current()/../@productID]/cost">	         
					 </xforms:setvalue>
					 <xforms:setvalue ref="../quantity" value="1">	         
					 </xforms:setvalue>
				 </xforms:action>
				
				</xforms:select1>
											
					      <xforms:output class="cost" ref="cost">
						<xforms:label>Cost:</xforms:label>
					      </xforms:output>
					      
					      <xforms:input class="quantity" ref="quantity">
						<xforms:label>Quantitiy:</xforms:label>
							<xforms:hint>Enter desired quantity of the product</xforms:hint>
							<xforms:alert>This must be a positive whole number value.</xforms:alert>
					      </xforms:input>
	</xforms:repeat>
	<div class="totals">
	<xforms:group  ref="instance('clientPurchaseOrder')">
		<xforms:output ref="/order/subTotal" class="table_summary regular" value="javascript:currency(number())">
			<xforms:label>Subtotal:</xforms:label>
		</xforms:output>
		<xforms:output ref="/order/tax" class="table_summary regular" value="javascript:currency(number())">
			<xforms:label>Tax:</xforms:label>
		</xforms:output>
		<hr class="smallHr"/>
		<xforms:output ref="/order/total" class="table_summary regular" value="javascript:currency(number())">
			<xforms:label>Total:</xforms:label>
		</xforms:output>
	</xforms:group>
	</div><!--end totals-->
	<xforms:trigger  appearance="xf:image">
		    <img class="buttonImage" src="../pngIcons/Add2.png" />
			<xforms:label>Add</xforms:label>
			<xforms:action ev:event="DOMActivate">
			
			   <!-- Insert a new item after the currently indexed item
				(the last focused item before this trigger was activated) -->
			   <xforms:insert context="instance('clientPurchaseOrder')/productsList" nodeset="product" at="index('purchaseTable')" 
					  position="after" origin="../prototype/product"></xforms:insert>
			
			   <!-- Send the focus to the new item in the order table -->
			   <xforms:setfocus control="purchaseTable"></xforms:setfocus>
			
			</xforms:action> 
		    </xforms:trigger>
		    <xforms:label>      </xforms:label>
		    
	<h3>Customer Information</h3>
	<hr/>
	<div id="paymentInfo">
		<h4>Customer Information</h4>
		<xforms:group  ref="instance('clientPurchaseOrder')/customerInfo/customer">
		<xforms:input class="loginInput" ref="province">
				<xforms:label class="loginInputLabel" >Province:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="customerName">
				<xforms:label class="loginInputLabel" >Name:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="creditCardNumber">
				<xforms:label class="loginInputLabel" >Credit Card Number:</xforms:label>
				<xforms:action ev:event="xforms-invalid">
				    <xforms:message level="modal">Invalid credit card number</xforms:message>
				</xforms:action>
			</xforms:input>
			<br/>
			<xforms:input  ref="creditCardExpiry" datatype="xf:date" >
				<xforms:label class="loginInputLabel" >Expiry:</xforms:label>
			</xforms:input>
			
		</xforms:group>	
		</div><!--end credit card div-->
	<div id="shippingInfo">
		<h4>Shipping information</h4>
		<xforms:group  ref="instance('clientPurchaseOrder')/customerInfo/shippingAddress">
			<xforms:input class="loginInput" ref="streetNumber">
				<xforms:label class="loginInputLabel" >Street Number:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="streetName">
				<xforms:label class="loginInputLabel" >Street Name:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="province">
				<xforms:label class="loginInputLabel" >Province:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="postalCode">
				<xforms:label class="loginInputLabel" >Postal Code:</xforms:label>
			</xforms:input>
			<br/>
			<xforms:input class="loginInput" ref="country">
				<xforms:label class="loginInputLabel">Country:</xforms:label>
			</xforms:input>
			
			
		</xforms:group>	
	</div>
	
		<xforms:submit  submission="updatePurchaseOrder" appearance="xf:image">
			<img class="buttonImage" src="../pngIcons/save2.png" />
			<xforms:label>Submit Order</xforms:label>
		</xforms:submit>
	</div><!--mainForm!-->	
		</div> <!--main content Area-->
	<div id="footerContainer">
	</div> <!--footer container-->
</div> <!--mainContainer>
    

    

    
   </body>
</html>
